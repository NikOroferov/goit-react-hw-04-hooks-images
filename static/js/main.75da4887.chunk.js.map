{"version":3,"sources":["componts/Searchbar/Searchbar.jsx","componts/ImageGalleryItem/ImageGalleryItem.jsx","componts/Button/Button.jsx","services/api-service.js","componts/Modal/Modal.jsx","componts/ImageGallery/ImageGallery.jsx","App.js","index.js"],"names":["Searchbar","onSubmit","useState","searchQuery","setSearchQuery","className","event","preventDefault","trim","alert","type","placeholder","value","name","onChange","e","currentTarget","toLowerCase","ImageGalleryItem","images","onClick","getId","id","map","largeImageURL","src","alt","Button","getImageApi","searchValue","page","axios","get","params","q","key","image_type","orientation","per_page","Modal","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","target","STATUS","ImageGallery","setPage","imagesInfo","setImagesInfo","status","setStatus","setId","showModal","setShowModal","then","responce","data","total","newImages","hits","state","scrollTo","top","document","documentElement","scrollHeight","behavior","toggleModal","color","height","width","find","image","App","queryValue","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.75da4887.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './Searchbar.css';\r\n\r\nfunction Searchbar({ onSubmit }) {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const handleInputChange = e => {\r\n    setSearchQuery(e.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (searchQuery.trim() === '') {\r\n      alert('Write your search query');\r\n      return;\r\n    }\r\n    onSubmit(searchQuery);\r\n    setSearchQuery('');\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form onSubmit={handleSubmit} className=\"SearchForm\">\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          placeholder=\"Search images and photos\"\r\n          value={searchQuery}\r\n          name=\"value\"\r\n          // autocomplete=\"off\"\r\n          // autofocus\r\n          onChange={handleInputChange}\r\n        />\r\n\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\nimport './ImageGalleryItem.css';\r\n\r\nfunction ImageGalleryItem({ images, onClick }) {\r\n  const getId = e => {\r\n    const id = e.currentTarget.id;\r\n    onClick(id);\r\n  };\r\n\r\n  return images.map(({ largeImageURL, id }) => (\r\n    <li key={id} id={id} className=\"ImageGalleryItem\" onClick={getId}>\r\n      <img src={largeImageURL} alt=\"\" className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  ));\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n","import './Button.css';\r\nexport default function Button({ value, onClick }) {\r\n  return (\r\n    <button type=\"button\" onClick={onClick} className=\"Button\">\r\n      {value}\r\n    </button>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n\r\nconst getImageApi = (searchValue, page) => {\r\n  return axios.get('https://pixabay.com/api/', {\r\n    params: {\r\n      q: searchValue,\r\n      key: '22683301-b01030d0df8a1fa2bda925efb',\r\n      image_type: 'photo',\r\n      orientation: 'horizontal',\r\n      per_page: 12,\r\n      page: page,\r\n    },\r\n  });\r\n};\r\n\r\nexport default getImageApi;\r\n","import { useEffect } from 'react';\r\nimport './Modal.css';\r\n\r\nfunction Modal({ onClose, src }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\r\n      <div className=\"Modal\">\r\n        <img src={src.largeImageURL} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './ImageGallery.css';\r\n\r\nimport ImageGalleryItem from 'componts/ImageGalleryItem/ImageGalleryItem';\r\nimport Button from 'componts/Button/Button';\r\nimport getImageApi from 'services/api-service';\r\nimport Modal from 'componts/Modal/Modal';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst STATUS = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVE: 'resolve',\r\n  REJECT: 'reject',\r\n};\r\n\r\nfunction ImageGallery({ searchValue }) {\r\n  const [page, setPage] = useState(1);\r\n  const [imagesInfo, setImagesInfo] = useState([]);\r\n  const [status, setStatus] = useState(STATUS.IDLE);\r\n  const [id, setId] = useState('');\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (searchValue === '') {\r\n      return;\r\n    }\r\n    setImagesInfo([]);\r\n    setPage(1);\r\n    setStatus(STATUS.PENDING);\r\n\r\n    getImageApi(searchValue, page).then(responce => {\r\n      if (responce.data.total !== 0) {\r\n        const newImages = responce.data.hits;\r\n        setImagesInfo(newImages);\r\n        setStatus(STATUS.RESOLVE);\r\n      } else {\r\n        setStatus(STATUS.REJECT);\r\n      }\r\n    });\r\n  }, [searchValue]);\r\n\r\n  useEffect(() => {\r\n    if (searchValue === '') {\r\n      return;\r\n    }\r\n    getImageApi(searchValue, page).then(responce => {\r\n      const newImages = responce.data.hits;\r\n      setImagesInfo(state => [...state, ...newImages]);\r\n      setStatus(STATUS.RESOLVE);\r\n    });\r\n  }, [page]);\r\n\r\n  window.scrollTo({\r\n    top: document.documentElement.scrollHeight,\r\n    behavior: 'smooth',\r\n  });\r\n\r\n  const handleLoadMore = () => {\r\n    setPage(state => state + 1);\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(state => !state);\r\n  };\r\n\r\n  const formSubmitHandler = id => {\r\n    setId(id);\r\n    toggleModal();\r\n  };\r\n\r\n  const getInfoById = () => {\r\n    return imagesInfo.find(image => image.id === +id);\r\n  };\r\n\r\n  if (status === STATUS.IDLE) {\r\n    return <h2>Пожалуйста, введите поисковый запрос</h2>;\r\n  }\r\n\r\n  if (status === STATUS.PENDING) {\r\n    return <Loader type=\"Oval\" color=\"#043f53\" height={80} width={80} />;\r\n  }\r\n\r\n  if (status === STATUS.REJECT) {\r\n    return <h2>Иллюстрации по запросу {searchValue} не найдены</h2>;\r\n  }\r\n\r\n  if (status === STATUS.RESOLVE) {\r\n    return (\r\n      <div className=\"content\">\r\n        <ul className=\"ImageGallery\">\r\n          <ImageGalleryItem images={imagesInfo} onClick={formSubmitHandler} />\r\n        </ul>\r\n        <Button value=\"Load more\" onClick={handleLoadMore} />\r\n\r\n        {showModal && <Modal onClose={toggleModal} src={getInfoById()} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGallery;\r\n","import './App.css';\nimport React, { useState } from 'react';\n\nimport Searchbar from 'componts/Searchbar/Searchbar';\nimport ImageGallery from 'componts/ImageGallery/ImageGallery';\n\nexport default function App() {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleFormSubmit = queryValue => {\n    setSearchQuery(queryValue);\n  };\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={handleFormSubmit} />\n      <ImageGallery searchValue={searchQuery} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}